T1: ‚ö° Git Command basic
P: ‚ú® Iniciar un repositorio local
$ git init

P: üî∏ Clonar un repositorio
$ git clone <url>

P: üõ°Ô∏è Inicializa un nuevo repositorio Git en el directorio actual.
$ git init

P: ‚ö° Clona un repositorio existente desde una URL remota hacia tu m√°quina local.
$ git clone [URL]

P: üõ†Ô∏è A√±ade un archivo al √°rea de preparaci√≥n (staging area) para ser incluido en el pr√≥ximo commit. Tambi√©n puedes usar git add . para a√±adir todos los cambios.
$ git add [archivo]

P: Confirma los cambios a√±adidos al √°rea de preparaci√≥n con un mensaje descriptivo.
$ git commit -m "mensaje"

P: Muestra el estado actual del directorio de trabajo y del √°rea de preparaci√≥n.
$ git status

P: Sube los commits locales al repositorio remoto.
$ git push

P: Obtiene cambios desde el repositorio remoto y los fusiona en tu rama local.
$ git pull

P: Lista todas las ramas locales en el repositorio. Tambi√©n puedes crear una nueva rama usando git branch [nombre_rama].
$ git branch

P: Cambia a una rama existente o a un commit espec√≠fico.
$ git checkout [nombre_rama o hash_commit]

P: Fusiona los cambios de una rama espec√≠fica en la rama actual.
$ git merge [nombre_rama]

P: Lista todos los repositorios remotos asociados con el repositorio actual. Tambi√©n puedes a√±adir un nuevo repositorio remoto usando git remote add [nombre] [URL].
$ git remote

P: Muestra un registro de los commits en el repositorio.
$ git log

P: Muestra las diferencias entre el directorio de trabajo y el √°rea de preparaci√≥n.
$ git diff

P: Elimina un archivo del √°rea de preparaci√≥n, pero conserva sus cambios en el directorio de trabajo.
$ git reset [archivo]

P: Elimina un archivo del directorio de trabajo y del √°rea de preparaci√≥n.
$ git rm [archivo]